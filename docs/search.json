[{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"installing-package","dir":"Articles","previous_headings":"","what":"Installing package","title":"rCISSVAE Vignette","text":"Install devtools remotes already installed: rCISSVAE package can installed :","code":"install.packages(\"remotes\") # or install.packages(\"devtools\") remotes::install_github(\"CISS-VAE/rCISS-VAE\") # or devtools::install_github(\"CISS-VAE/rCISS-VAE\")"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"ensuring-correct-virtual-environment-for-reticulate","dir":"Articles","previous_headings":"","what":"Ensuring correct virtual environment for reticulate","title":"rCISSVAE Vignette","text":"package uses reticulate interface python version package cissvae. Therefore, necessary make sure venv conda environment set cissvae package installed. comfortable creating environment installing package, great! need tell reticulate point. Venv conda","code":"reticulate::use_virtualenv(\"./.venv\", required = TRUE) reticulate::use_condaenv(\"myenv\", required = TRUE)"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"virtual-environment-helper-function","dir":"Articles","previous_headings":"Ensuring correct virtual environment for reticulate","what":"Virtual environment helper function","title":"rCISSVAE Vignette","text":"want manually create virtual environment, can use helper function create_cissvae_env() create virtual environment (venv) current working directory. Note: run issues create_cissvae_env(), can create virtual environment manually following tutorial environment created, activate using:","code":"create_cissvae_env(   envname = \"cissvae_environment\", ## name of environment   path = NULL, ## add path to wherever you want virtual environment to be   install_python = FALSE, ## set to TRUE if you want create_cisssvae_env to install python for you   python_version = \"3.10\" ## set to whatever version you want >=3.10. Python 3.10 or 3.11 recommended ) reticulate::use_virtualenv(\"./cissvae_environment\", required = TRUE) # If you used a non-default environment name then, # reticulate::use_virtualenv(\"./your_environment_name\", required = TRUE)"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"optional-installing-other-python-packages","dir":"Articles","previous_headings":"Ensuring correct virtual environment for reticulate","what":"(optional) Installing other python packages","title":"rCISSVAE Vignette","text":"want install python packages (eg seaborn) environment, can use reticulate::virtualenv_install().","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"quickstart","dir":"Articles","previous_headings":"","what":"Quickstart","title":"rCISSVAE Vignette","text":"reticulate pointing virtual environment containing ciss_vae python package, can either use run_cissvae function autotune_cissvae function. know hyperparameters want use model, use run_cissvae function.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"run-cissvae-with-training-history-and-progress-tracking","dir":"Articles","previous_headings":"Quickstart","what":"Run CISSVAE with Training History and Progress Tracking","title":"rCISSVAE Vignette","text":"data DataFrame format optional index column. already clusters want use, separate vector dataframe. clusters begin , set ‘clusters’ run_cissvae() NULL.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"example-dataset","dir":"Articles","previous_headings":"Quickstart > Run CISSVAE with Training History and Progress Tracking","what":"Example Dataset","title":"rCISSVAE Vignette","text":"rCISSVAE package comes sample dataset predetermined clusters. use sake tutorial. dataset, df_missing contains index column well following: Age, Salary ZipCode columns represent demographic data missingness columns Y1t-Y5t represent biomarker data obtained different timepoints t.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"explanation-of-run_cissvae-parameters","dir":"Articles","previous_headings":"Quickstart > Run CISSVAE with Training History and Progress Tracking","what":"Explanation of run_cissvae() Parameters","title":"rCISSVAE Vignette","text":"run_cissvae() function comprehensive wrapper basic steps running CISS-VAE model, including dataset preparation, optional clustering, running imputation model. Dataset Parameters - data: DataFrame containing dataset imputed. Contains optional index column. - index_col: Name index column preserved imputing. Index column values held validation - val_proportion: Fraction non-missing entries hold validation training. use different proportions cluster, pass vector. - replacement_value: Fill value masked entries training. Default 0.0. - columns_ignore: Character integer vector containing columns exclude selecting validation data. columns used training. - print_dataset: Set TRUE print dataset summary information processing. Clustering Parameters (optional) - clusters: Vector one cluster label per row ‘data’ dataframe. NULL, automatically determine clusters using HDBSCAN KMeans. - n_clusters: Number clusters KMeans clustering ‘clusters’ NULL. n_clusters NULL, use HDBSCAN clustering. - cluster_selection_epsilon: Epsilon parameter HDBSCAN clustering automatic clustering used. - missingness_proportion_matrix: Optional pre-computed missingness proportion matrix feature-based clustering. provided, clustering based proportions instead direct 0/1 missingness pattern. - scale_features: Set TRUE scale features using missingness proportion matrix clustering. Model Parameters - hidden_dims: vector containing sizes hidden layers encoder/decoder. length vector determines number hidden layers. - latent_dim: dimension latent space representation. - layer_order_enc: vector stating pattern ‘shared’ ‘unshared’ layers encoder. length must match length(hidden_dims). Default c(‘unshared’, ‘unshared’, ‘unshared’). - layer_order_dec: vector stating pattern ‘shared’ ‘unshared’ layers decoder. length must match length(hidden_dims). Default c(‘shared’, ‘shared’, ‘shared’). - latent_shared: Whether latent space weights shared across clusters. FALSE, separate latent weights cluster. - ouput_shared: FALSE, separate output layer cluster. - batch_size: Integer. Mini-batch size training. Larger values may improve training stability require memory. - return_model: TRUE, returns model object. Set TRUE use plot_vae_architecture() running. - epochs: Number epochs initial training phase - initial_lr: Initial learning rate optimizer. - decay_factor: Exponential decay factor learning rate. - beta: Weight KL divergence term VAE loss function. - device: Device specification computation (“cpu” “cuda”). NULL, automatically selects best available device. - max-loops: Max number impute-refit loops perform. - patience: Training stops validation loss doesn’t improve many consecutive impute-refit loops. - epochs-per-loop: Number epochs per refit loop. null, uses value epochs. Default NULL. - decay_factor_refit: Decay factor refit loops. NULL, uses value decay_factor. Default NULL. - beta_refit: KL weight refit loops. NULL, uses value beta. Default NULL. Optional Parameters - verbose: Set TRUE print MSE loop runs. - return_silhouettes: clusters given, return silhouette scores automatic clustering. - return_history: TRUE, returns training history data.frame. Good checking overfitting. - return_dataset: TRUE, returns ClusterDataset object.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"running-the-imputation","dir":"Articles","previous_headings":"Quickstart > Run CISSVAE with Training History and Progress Tracking","what":"Running the imputation","title":"rCISSVAE Vignette","text":"run imputation model, first load data.","code":"suppressPackageStartupMessages({   library(tidyverse)   library(reticulate)   library(rCISSVAE) })  ## Set correct virtualenv reticulate::use_virtualenv(\"./cissvae_environment\", required = TRUE)  ## Load the data data(df_missing) data(clusters) ## actual cluster labels in clusters$clusters (other column is index)  cluster_summary(df_missing, clusters$clusters, index_col = \"index\")  %>% kable()  ## Run the imputation model.  dat = run_cissvae(   data = df_missing,   index_col = \"index\",   val_proportion = 0.1, ## pass a vector for different proportions by cluster   columns_ignore = c(\"Age\", \"Salary\", \"ZipCode10001\", \"ZipCode20002\", \"ZipCode30003\"), ## If there are columns in addition to the index you want to ignore when selecting validation set, list them here. In this case, we ignore the 'demographic' columns because we do not want to remove data from them for validation purposes.    clusters = clusters$clusters, ## we have precomputed cluster labels so we pass them here   epochs = 500,   return_silhouettes = FALSE,   return_history = TRUE,  # Get detailed training history   verbose = FALSE,   return_model = TRUE, ## Allows for plotting model schematic   device = \"cpu\",  # Explicit device selection   layer_order_enc = c(\"unshared\", \"shared\", \"unshared\"),   layer_order_dec = c(\"shared\", \"unshared\", \"shared\") )  ## Retrieve results imputed_df <- dat$imputed silhouette <- dat$silhouettes training_history <- dat$history  # Detailed training progress  ## Plot training progress if (!is.null(training_history)) {   plot(training_history$epoch, training_history$loss,         type = \"l\", main = \"Training Loss Over Time\",         xlab = \"Epoch\", ylab = \"Loss\") }  plot_vae_architecture(model = dat$model, save_path = \"test_plot_arch.png\") #>  #> Attaching package: 'kableExtra' #> The following object is masked from 'package:dplyr': #>  #>     group_rows #> Processing continuous variables: Age, Salary, ZipCode10001, ZipCode20002, ZipCode30003, Y11, Y12, Y13, Y14, Y15, Y21, Y22, Y23, Y24, Y25, Y31, Y32, Y33, Y34, Y35, Y41, Y42, Y43, Y44, Y45, Y51, Y52, Y53, Y54, Y55  #> Processing categorical variables: #> Cluster dataset: #>  ClusterDataset(n_samples=8000, n_features=30, n_clusters=4) #>   • Original missing: 61800 / 200000 (30.90%) #>   • Validation held-out: 17783 (12.87% of non-missing) #>   • .data shape:     (8000, 30) #>   • .masks shape:    (8000, 30) #>   • .val_data shape: (8000, 30) #> Plot saved to: test_plot_arch.png"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"clustering-features-by-missingness-patterns","dir":"Articles","previous_headings":"Quickstart","what":"Clustering Features by Missingness Patterns","title":"rCISSVAE Vignette","text":"running CISS-VAE, can cluster features based missingness patterns. helps identify features tend missing together systematically, can improve imputation quality.","code":"library(rCISSVAE)  data(df_missing)   cluster_result <- cluster_on_missing(   data = df_missing,   cols_ignore =  c(\"index\", \"Age\", \"Salary\", \"ZipCode10001\", \"ZipCode20002\", \"ZipCode30003\"),   n_clusters = 4,  # Use KMeans with 4 clusters   seed = 42 )  print(\"Cluster assignments for CISS-VAE:\") #> [1] \"Cluster assignments for CISS-VAE:\" print(cluster_result$clusters) #>    [1] 1 1 1 1 2 2 1 1 1 2 2 1 1 2 2 2 2 2 1 1 2 0 1 3 1 1 0 1 0 1 2 1 1 1 1 1 2 #>   [38] 1 1 1 2 1 2 1 2 1 1 0 2 0 1 1 2 1 1 1 1 1 1 0 0 1 1 2 1 1 0 1 1 0 2 1 1 0 #>   [75] 1 1 0 1 2 1 1 0 0 2 1 1 2 1 2 0 0 1 1 1 1 0 2 1 0 1 1 1 1 1 1 1 1 0 2 1 1 #>  [112] 1 0 2 0 0 1 2 1 2 1 2 1 1 1 1 2 1 1 0 1 1 1 2 0 1 2 1 2 1 0 1 0 1 0 0 0 0 #>  [149] 1 1 1 2 0 0 1 0 2 1 1 1 1 0 2 2 2 0 1 1 0 1 1 2 1 1 1 1 2 1 1 1 1 1 0 1 1 #>  [186] 1 2 1 1 2 1 1 1 1 2 1 0 1 2 1 1 0 1 2 2 0 1 2 1 2 1 0 2 1 2 1 1 0 1 1 1 2 #>  [223] 0 0 1 0 1 1 1 0 1 1 0 2 0 0 1 2 1 0 1 1 1 2 0 1 2 0 2 0 1 0 1 1 1 2 0 1 1 #>  [260] 1 1 3 1 1 1 1 2 1 1 0 1 2 2 1 0 2 2 1 1 2 1 1 1 1 2 2 2 2 1 0 0 2 0 2 1 1 #>  [297] 1 2 0 1 1 1 2 1 2 0 0 1 0 0 1 1 1 2 0 1 1 1 1 0 0 0 2 1 2 1 2 0 2 0 0 2 1 #>  [334] 2 2 1 1 0 1 2 0 1 1 0 2 1 2 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 2 0 0 2 0 1 1 #>  [371] 3 1 1 1 2 1 1 2 2 2 1 1 1 2 2 1 1 0 1 1 1 1 0 2 2 0 1 2 0 2 1 0 1 2 3 1 1 #>  [408] 2 1 1 2 0 0 2 1 1 1 3 1 0 1 1 1 1 1 2 0 1 0 2 1 1 1 1 1 2 2 1 1 1 1 1 0 2 #>  [445] 3 0 1 2 2 0 1 1 1 1 1 0 0 1 0 0 1 1 1 0 3 1 2 0 2 1 0 0 1 2 1 1 1 2 1 2 1 #>  [482] 0 2 2 2 2 1 0 1 1 1 1 0 0 1 0 1 2 1 1 1 1 1 0 1 0 0 2 2 0 1 1 1 1 1 1 1 1 #>  [519] 1 1 2 1 1 0 1 1 1 0 1 2 2 1 1 0 0 0 1 1 1 1 1 2 3 1 1 1 2 1 0 2 2 1 2 1 1 #>  [556] 1 1 1 1 2 1 3 1 0 2 2 0 1 1 0 1 2 2 1 2 1 0 0 1 1 1 2 1 0 1 0 1 2 2 2 2 1 #>  [593] 2 1 0 0 0 1 0 1 1 2 2 1 1 0 1 1 1 1 2 2 1 1 1 0 1 1 2 0 1 1 1 0 0 1 1 2 1 #>  [630] 1 0 2 1 0 1 0 1 1 1 0 1 1 1 1 1 2 2 2 1 1 2 1 1 1 2 2 1 2 0 1 0 1 1 2 0 1 #>  [667] 2 1 1 0 1 1 1 2 1 2 1 2 0 2 2 1 2 1 1 2 1 1 2 1 1 2 0 0 2 0 0 2 0 1 0 1 1 #>  [704] 0 1 1 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 2 2 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 #>  [741] 1 1 1 2 1 1 0 2 2 1 0 1 0 1 1 2 2 1 0 2 2 0 1 1 2 0 1 0 1 1 1 1 1 1 2 1 1 #>  [778] 1 1 2 0 0 1 0 1 3 0 0 1 1 2 1 2 1 1 2 2 1 2 1 1 1 1 2 1 1 1 1 1 1 0 1 0 1 #>  [815] 1 1 1 1 1 1 2 2 1 1 1 2 1 1 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 1 0 2 0 2 #>  [852] 0 1 1 1 0 1 1 0 1 2 1 1 1 2 1 1 1 1 1 2 0 1 0 1 1 0 1 1 1 0 2 2 1 2 1 0 1 #>  [889] 1 1 2 0 2 2 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 2 1 2 0 1 2 1 1 1 2 1 0 1 1 1 #>  [926] 1 0 0 0 1 1 2 1 2 1 2 0 1 2 1 1 1 2 1 1 1 1 2 1 0 1 0 1 1 1 1 1 0 2 1 1 2 #>  [963] 0 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 2 0 1 2 2 1 1 0 1 0 1 1 1 0 2 #> [1000] 1 2 1 1 1 1 2 2 2 2 0 0 2 2 1 1 1 1 1 0 1 0 2 3 1 0 1 1 1 2 0 1 2 0 1 0 1 #> [1037] 1 0 1 0 1 1 1 2 1 1 2 1 1 0 1 1 2 1 1 2 0 1 1 1 1 1 1 0 2 0 1 1 0 0 2 3 3 #> [1074] 1 2 1 0 2 1 1 1 1 1 1 1 1 1 0 2 3 2 1 2 1 2 1 1 0 1 1 1 2 2 0 0 0 2 2 1 2 #> [1111] 1 1 1 0 1 0 1 1 0 0 1 1 0 1 1 2 2 2 1 0 1 2 1 2 1 1 1 1 1 1 0 2 1 0 0 2 1 #> [1148] 2 1 0 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 2 0 0 1 1 1 #> [1185] 0 2 0 1 1 0 1 0 1 1 1 1 0 1 1 2 0 1 0 1 1 1 1 0 0 1 1 2 1 0 0 1 0 1 1 0 2 #> [1222] 2 1 1 0 2 2 0 0 2 0 1 1 2 2 0 0 1 1 0 2 0 1 1 1 0 0 0 2 1 1 0 1 2 3 1 0 0 #> [1259] 1 1 1 1 1 0 2 0 1 1 1 1 2 0 1 1 1 0 2 2 2 2 1 0 1 0 1 1 1 2 1 0 1 2 2 1 1 #> [1296] 2 1 1 1 1 1 1 1 2 1 1 2 1 2 1 2 0 1 2 1 1 1 1 1 2 1 1 2 1 1 0 1 1 1 1 1 1 #> [1333] 1 1 1 1 1 0 2 2 0 1 2 0 3 1 1 0 1 1 1 2 1 0 1 1 0 1 1 1 1 0 0 0 1 0 1 2 0 #> [1370] 1 0 2 1 1 0 1 1 1 1 0 2 0 1 2 2 1 0 0 1 1 2 0 3 2 1 2 0 0 1 1 1 1 2 1 1 0 #> [1407] 1 1 1 2 1 1 1 2 1 0 2 0 2 1 0 1 1 0 1 1 1 2 1 1 2 0 1 1 0 1 1 0 0 2 2 2 1 #> [1444] 1 1 1 1 1 0 1 2 2 1 1 1 1 1 1 0 1 1 1 2 2 1 1 0 0 2 2 1 2 2 1 0 2 1 1 1 0 #> [1481] 3 2 0 0 1 2 0 1 1 0 0 2 1 2 1 2 0 2 2 0 1 0 1 1 0 0 2 2 1 1 1 2 1 2 3 0 1 #> [1518] 0 2 1 0 1 2 1 2 1 0 1 2 0 2 2 1 2 1 1 2 1 0 1 1 1 1 1 2 0 0 1 0 0 1 0 2 1 #> [1555] 1 1 0 1 0 0 1 0 1 2 2 2 0 1 1 0 1 1 1 1 1 2 1 1 0 2 1 1 1 1 2 2 1 2 1 0 1 #> [1592] 1 1 2 2 1 1 0 0 1 1 2 2 1 1 1 1 2 1 1 0 2 1 0 2 1 1 1 1 2 1 1 0 2 0 1 1 1 #> [1629] 1 1 1 0 1 2 0 1 0 0 1 2 1 0 2 1 1 2 1 1 0 1 2 1 1 0 0 1 1 0 1 1 1 0 1 1 2 #> [1666] 1 2 1 1 3 1 1 2 0 1 1 2 1 1 1 1 1 1 1 1 0 1 1 2 2 1 1 1 0 1 1 0 1 1 1 1 1 #> [1703] 2 2 1 0 2 1 1 0 1 1 1 1 1 0 0 1 1 1 1 0 2 1 0 1 2 1 0 1 2 0 1 0 1 1 0 0 2 #> [1740] 1 2 0 0 2 1 3 1 0 1 1 1 1 2 1 1 1 0 1 1 1 1 2 1 1 2 0 1 1 1 0 0 1 1 1 1 1 #> [1777] 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 0 1 2 2 0 1 0 0 2 2 1 0 1 1 2 2 1 0 2 0 #> [1814] 0 1 1 0 1 1 1 1 1 2 1 1 0 0 2 1 1 1 1 2 1 1 1 2 1 1 1 1 0 1 2 1 0 1 1 1 1 #> [1851] 2 0 1 1 0 2 2 0 0 0 1 1 0 1 1 1 2 0 2 3 1 1 2 1 1 1 1 1 2 2 0 1 1 2 1 1 0 #> [1888] 1 0 2 2 1 0 0 1 1 1 1 2 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 0 2 2 2 1 1 1 1 1 2 #> [1925] 1 0 2 1 1 0 1 0 2 2 1 0 1 0 1 1 1 2 0 2 2 1 1 1 1 0 1 1 1 2 2 1 0 1 2 1 1 #> [1962] 1 2 2 1 1 1 1 1 1 2 2 1 1 0 1 0 2 1 1 2 0 0 1 1 1 1 1 1 0 0 2 0 2 1 1 0 1 #> [1999] 2 1 0 2 3 3 3 0 2 2 0 3 3 2 3 0 2 3 2 0 0 3 3 2 2 3 0 2 3 3 0 0 2 3 2 3 0 #> [2036] 2 3 2 2 2 3 2 2 3 2 2 0 0 2 0 2 0 3 2 2 3 2 2 3 3 3 2 3 3 0 2 2 3 2 2 3 3 #> [2073] 3 0 2 3 2 0 0 2 2 3 2 2 2 0 0 0 3 0 2 0 3 2 3 3 2 3 2 3 0 2 3 0 2 2 0 3 3 #> [2110] 3 0 0 0 3 2 2 2 3 2 0 3 0 3 3 0 2 0 0 3 3 0 0 3 3 2 2 0 3 0 3 2 0 3 2 0 3 #> [2147] 3 0 3 0 3 2 3 3 0 3 2 2 3 3 2 3 3 3 3 0 3 3 3 0 3 2 3 3 2 0 3 3 3 0 0 3 3 #> [2184] 3 2 0 2 3 0 2 2 0 3 3 3 0 2 3 3 3 3 0 2 3 2 0 2 2 3 3 0 0 3 3 3 3 3 3 2 3 #> [2221] 3 2 3 3 2 2 2 0 3 2 3 3 0 2 2 3 3 2 2 2 3 2 2 2 3 0 3 3 3 3 3 0 3 0 2 2 0 #> [2258] 3 3 3 3 0 3 2 3 2 2 3 2 2 2 3 0 2 3 3 2 0 3 2 3 3 2 3 3 0 0 3 2 3 0 3 3 0 #> [2295] 0 3 3 0 3 3 2 2 2 3 2 2 0 2 0 3 0 0 3 3 3 3 2 3 3 2 3 2 0 3 3 0 3 2 3 3 3 #> [2332] 0 0 2 2 3 2 0 2 0 0 0 0 0 2 0 0 0 3 0 0 2 2 2 3 2 3 2 3 0 3 0 3 3 0 2 0 3 #> [2369] 0 2 3 0 3 3 2 3 2 2 3 2 0 3 2 0 3 2 3 0 2 3 0 0 2 3 2 3 2 2 3 0 0 0 2 3 0 #> [2406] 3 0 3 3 0 0 0 3 3 2 2 3 3 0 3 0 0 3 0 3 2 2 2 0 0 2 0 2 3 0 0 3 3 0 2 2 2 #> [2443] 3 0 3 2 3 0 0 2 2 3 2 2 3 2 0 0 3 0 3 3 3 3 2 3 3 0 0 0 0 2 3 3 2 3 3 3 3 #> [2480] 0 2 0 3 0 3 2 0 3 0 3 0 2 0 2 2 3 3 3 3 0 0 0 0 0 2 3 2 2 0 0 2 3 0 3 0 0 #> [2517] 3 3 0 0 3 2 2 2 0 2 2 2 3 3 2 3 2 0 0 2 2 2 3 2 2 3 0 3 0 0 0 0 0 3 2 3 2 #> [2554] 0 0 0 3 3 3 0 3 0 2 3 2 2 2 3 3 2 3 3 3 0 0 0 3 3 3 3 0 2 3 2 3 3 0 3 3 2 #> [2591] 0 3 3 3 0 0 3 3 3 2 3 0 2 2 0 2 0 3 0 3 0 2 2 2 3 3 3 3 0 3 3 3 0 2 2 3 0 #> [2628] 3 0 0 3 2 0 3 3 2 0 3 0 0 2 3 3 2 2 3 2 3 3 2 0 2 2 3 2 3 0 3 0 0 3 2 3 3 #> [2665] 2 2 2 2 3 0 2 2 3 2 2 0 0 0 3 3 0 0 0 2 0 0 0 0 3 3 2 0 3 3 0 2 2 2 2 3 3 #> [2702] 2 2 3 2 2 2 0 3 0 0 0 3 2 3 0 2 2 3 2 0 0 2 0 2 3 0 0 3 3 2 0 2 2 3 0 0 3 #> [2739] 3 3 2 0 3 2 0 2 0 3 3 3 3 0 3 2 3 2 0 0 3 3 3 2 0 0 0 2 3 3 0 0 3 0 0 3 0 #> [2776] 2 0 3 3 3 2 0 3 2 2 0 2 3 3 3 0 2 3 0 2 3 3 2 2 2 0 3 2 2 3 2 2 2 3 0 0 3 #> [2813] 0 3 2 0 0 3 3 0 3 2 2 0 2 3 3 2 2 0 2 0 3 2 0 3 0 3 3 3 0 3 3 3 3 3 2 2 2 #> [2850] 3 0 0 3 3 3 2 3 3 3 3 0 2 3 2 0 3 0 3 0 3 2 3 3 3 0 3 3 2 2 3 2 3 2 2 0 3 #> [2887] 0 2 3 2 0 2 0 2 2 3 3 2 3 0 2 3 2 0 3 0 3 0 3 0 2 0 3 3 0 0 0 0 0 2 2 2 0 #> [2924] 2 3 0 2 3 2 3 3 0 3 2 2 2 2 0 2 3 2 0 0 0 2 0 0 3 2 0 3 2 2 3 2 0 3 3 3 0 #> [2961] 0 3 3 2 2 2 3 2 2 3 3 0 2 2 3 2 3 3 3 0 3 3 3 0 3 0 3 3 2 0 3 3 3 0 3 3 0 #> [2998] 0 2 0 3 3 2 0 0 2 2 0 0 2 0 2 2 0 2 3 3 2 2 3 3 3 0 2 2 0 3 3 3 0 0 2 0 2 #> [3035] 2 3 3 2 2 2 0 2 0 0 2 3 2 0 0 2 0 0 0 0 3 2 3 3 0 3 3 3 2 2 3 3 0 2 0 3 2 #> [3072] 3 3 0 3 2 2 0 2 3 3 3 0 2 2 0 2 3 2 0 3 3 0 0 3 3 0 0 3 0 3 3 0 3 3 0 0 3 #> [3109] 0 0 0 2 2 3 3 0 2 3 3 2 0 2 2 3 3 0 3 3 2 3 3 2 3 0 3 2 3 3 2 3 3 2 0 0 3 #> [3146] 3 2 3 2 3 3 3 3 0 2 2 3 3 3 3 0 3 3 2 3 0 0 2 0 3 3 0 3 0 2 0 0 2 3 2 0 0 #> [3183] 2 2 0 2 0 2 0 0 2 2 3 2 3 2 3 3 0 2 2 3 2 2 3 2 3 2 0 3 3 2 2 0 3 3 0 3 0 #> [3220] 2 0 3 3 2 2 2 2 2 2 3 0 3 3 0 3 0 2 2 2 3 0 3 2 2 0 2 3 0 3 3 0 2 3 3 0 0 #> [3257] 2 3 3 0 0 0 2 2 3 3 3 2 2 0 0 0 2 3 2 3 2 0 3 0 0 3 2 3 3 3 3 3 2 3 0 3 2 #> [3294] 0 3 2 0 0 0 0 3 2 2 3 2 3 2 2 0 3 0 0 0 0 0 3 0 3 3 0 0 2 2 3 3 0 2 2 3 0 #> [3331] 3 3 2 2 0 3 3 0 2 3 2 3 3 0 0 2 0 3 0 2 2 2 3 2 3 0 3 3 0 0 0 3 2 3 3 3 0 #> [3368] 0 2 2 2 0 2 3 0 2 3 3 2 3 3 3 3 3 2 0 3 3 2 3 2 2 0 2 0 0 3 3 0 2 0 3 0 0 #> [3405] 2 0 0 0 3 2 3 3 0 3 3 3 3 3 0 0 2 3 3 2 3 0 3 2 3 3 0 0 0 0 3 0 3 2 2 2 3 #> [3442] 0 3 0 3 3 2 0 2 0 0 0 3 3 2 0 2 3 2 3 0 3 0 2 0 3 2 2 2 2 2 3 3 0 2 2 2 2 #> [3479] 2 0 0 0 2 2 2 3 0 2 3 3 3 2 3 0 0 0 3 3 0 0 0 3 2 3 3 2 3 2 0 3 0 2 0 2 3 #> [3516] 0 2 0 3 0 3 0 0 3 0 3 0 0 0 3 3 2 0 3 3 0 3 2 3 2 3 2 0 3 0 3 2 3 3 0 2 2 #> [3553] 3 0 2 0 3 3 0 2 2 0 2 3 3 2 2 0 3 3 2 3 2 0 0 3 0 2 3 2 3 3 3 0 0 0 0 2 3 #> [3590] 0 3 2 0 3 2 2 3 3 3 0 3 3 0 3 3 2 0 3 3 3 3 0 3 0 0 0 0 0 0 0 2 3 3 3 3 2 #> [3627] 3 3 0 3 2 0 3 3 3 3 2 3 0 0 3 3 2 3 2 3 0 3 3 3 2 3 3 3 0 3 3 3 3 2 3 3 3 #> [3664] 2 2 2 0 2 2 0 0 3 2 0 2 2 3 0 2 3 2 0 0 0 0 3 3 2 3 3 0 2 3 3 3 0 2 3 2 2 #> [3701] 3 0 0 2 0 3 2 0 2 3 0 2 2 2 2 3 0 0 0 3 0 2 0 2 3 3 0 2 2 0 3 3 0 2 2 0 2 #> [3738] 3 3 3 0 3 0 3 2 0 3 3 3 3 0 2 2 0 0 3 3 2 3 3 0 3 3 3 2 2 3 3 3 0 0 3 2 2 #> [3775] 2 2 3 2 0 3 2 0 0 3 0 3 0 2 3 0 3 3 3 0 3 3 2 2 3 0 2 3 3 2 0 3 2 2 3 3 2 #> [3812] 0 2 2 0 0 0 3 3 0 3 0 0 0 3 3 0 0 2 0 3 2 2 2 0 3 2 0 3 0 2 2 3 2 3 0 2 2 #> [3849] 3 2 3 3 3 0 0 0 2 0 0 3 2 3 2 2 3 0 2 3 2 3 3 2 0 0 3 0 2 3 2 0 3 3 3 3 0 #> [3886] 0 3 0 3 2 2 2 3 0 0 2 3 3 2 0 2 0 0 2 3 3 3 0 3 2 2 0 3 2 3 0 2 3 0 3 0 3 #> [3923] 3 0 3 0 2 0 0 3 3 0 2 0 2 0 3 0 2 3 0 3 0 3 0 2 0 3 2 3 2 3 3 0 3 3 3 2 0 #> [3960] 2 3 0 2 0 0 2 0 2 3 2 2 3 3 3 0 0 2 2 3 3 3 0 2 3 0 3 3 2 0 2 2 3 0 0 2 2 #> [3997] 3 2 2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 0 1 1 1 1 1 1 2 1 #> [4034] 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 #> [4071] 2 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 2 1 0 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 #> [4108] 1 1 1 1 2 0 1 1 1 1 2 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 #> [4145] 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 0 1 0 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 #> [4182] 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 0 1 1 1 1 1 #> [4219] 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 3 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 #> [4256] 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 #> [4293] 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 0 1 1 1 #> [4330] 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 #> [4367] 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 0 0 1 1 1 1 1 1 1 2 1 1 1 2 2 0 0 1 1 #> [4404] 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 0 1 1 1 1 1 2 1 2 1 1 1 1 #> [4441] 2 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 0 1 1 2 1 1 2 2 1 1 1 2 1 #> [4478] 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 0 1 #> [4515] 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 3 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 #> [4552] 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 #> [4589] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 0 1 1 1 1 1 1 1 1 1 2 #> [4626] 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 2 1 1 1 1 1 1 #> [4663] 1 1 1 1 1 1 1 2 1 1 1 2 1 2 2 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 2 1 3 1 1 1 1 #> [4700] 2 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 0 2 1 1 1 1 1 1 2 1 1 1 1 1 0 2 1 1 1 #> [4737] 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 #> [4774] 1 1 1 1 1 1 0 1 1 1 1 1 2 1 1 1 1 2 1 1 0 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 #> [4811] 1 0 0 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 0 2 1 1 1 1 1 1 1 #> [4848] 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 #> [4885] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 #> [4922] 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 2 1 1 1 2 #> [4959] 2 1 1 1 1 1 1 1 1 0 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [4996] 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 0 1 1 2 1 1 1 1 #> [5033] 2 1 1 1 1 0 1 1 1 0 3 1 1 1 1 1 1 1 0 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [5070] 1 1 1 1 2 1 1 2 1 0 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [5107] 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 #> [5144] 1 2 1 1 1 1 1 0 1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 #> [5181] 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 2 1 1 1 1 3 1 1 1 2 1 1 #> [5218] 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 #> [5255] 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 0 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 #> [5292] 1 2 1 2 1 1 1 1 1 1 3 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 3 1 2 1 2 1 #> [5329] 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 #> [5366] 1 1 1 1 1 3 1 2 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 0 1 2 2 2 2 1 1 1 1 1 1 #> [5403] 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 #> [5440] 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 #> [5477] 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 #> [5514] 2 2 1 2 1 1 1 2 1 1 1 2 0 1 1 1 1 1 1 1 1 1 1 1 0 3 1 1 1 1 2 1 2 1 1 2 1 #> [5551] 1 1 1 1 1 1 1 1 2 2 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 #> [5588] 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 #> [5625] 1 1 1 1 1 1 2 2 1 1 2 1 2 1 1 3 1 1 2 1 1 1 1 1 1 1 1 0 1 2 1 1 1 1 1 2 1 #> [5662] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 0 1 2 1 1 1 1 2 1 2 2 #> [5699] 1 1 1 1 1 1 1 2 1 1 0 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [5736] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 2 1 1 1 1 1 1 1 #> [5773] 1 1 1 1 1 3 1 1 1 1 1 1 1 0 2 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 1 1 1 1 #> [5810] 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 2 1 2 1 #> [5847] 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 0 1 1 1 1 1 1 1 #> [5884] 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 #> [5921] 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 0 1 1 1 1 2 1 1 1 0 1 1 1 #> [5958] 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 3 1 1 1 1 1 1 1 1 1 1 2 1 1 1 #> [5995] 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6032] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6069] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6106] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6143] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6180] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6217] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6254] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6291] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6328] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6365] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6402] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6439] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6476] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6513] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6550] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6587] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6624] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6661] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6698] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6735] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6772] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6809] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6846] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6883] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6920] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6957] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [6994] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7031] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7068] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7105] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7142] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7179] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7216] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7253] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7290] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7327] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7364] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7401] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7438] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7475] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7512] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7549] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7586] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7623] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7660] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7697] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7734] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7771] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7808] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7845] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7882] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7919] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7956] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [7993] 1 1 1 1 1 1 1 1 print(paste(\"Clustering quality (silhouette):\", round(cluster_result$silhouette, 3))) #> [1] \"Clustering quality (silhouette): 0.135\"   result <- run_cissvae(   data = df_missing,   index_col = \"index\",   clusters = cluster_result$clusters,   epochs = 5, ## short run for demo purposes   return_history = TRUE,   verbose = FALSE,   device = \"cpu\" ) #> Cluster dataset: #>  ClusterDataset(n_samples=8000, n_features=30, n_clusters=4) #>   • Original missing: 61800 / 240000 (25.75%) #>   • Validation held-out: 17761 (9.97% of non-missing) #>   • .data shape:     (8000, 30) #>   • .masks shape:    (8000, 30) #>   • .val_data shape: (8000, 30)"},{"path":[]},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"understanding-parameter-types","dir":"Articles","previous_headings":"Quickstart > Advanced Hyperparameter Optimization with Autotune","what":"Understanding Parameter Types","title":"rCISSVAE Vignette","text":"hyperparameter optimization autotune_cissvae(), parameters can specified : Fixed value: beta = 0.01 → parameter remains constant across trials Categorical choice: c(64, 128, 256) → Optuna selects provided options Integer range: c(1, 4) → Optuna suggests integers 1 4 (inclusive) Float range: reticulate::tuple(1e-4, 1e-3) → Optuna suggests floats specified range","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"layer-placement-strategies","dir":"Articles","previous_headings":"Quickstart > Advanced Hyperparameter Optimization with Autotune > Understanding Parameter Types","what":"Layer Placement Strategies","title":"rCISSVAE Vignette","text":"layer arrangement strategies control shared unshared layers positioned: \"at_end\": Places shared layers end encoder start decoder \"at_start\": Places shared layers start encoder end decoder \"alternating\": Distributes shared layers evenly throughout architecture \"random\": Uses random placement shared layers (reproducible seed) Autotuned VAE Architecture","code":"library(tidyverse) library(reticulate) library(rCISSVAE) reticulate::use_virtualenv(\"./cissvae_environment\", required = TRUE)  data(df_missing) data(clusters)  aut <- autotune_cissvae(   data = df_missing,   index_col = \"index\",   clusters = clusters$clusters,   save_model_path = NULL,   save_search_space_path = NULL,   n_trials = 3, ## Using low number of trials for demo   study_name = \"comprehensive_vae_autotune\",   device_preference = \"cpu\",   show_progress = TRUE,  # Rich progress bars with training visualization   optuna_dashboard_db = \"sqlite:///optuna_study.db\",  # Save results to database   load_if_exists = TRUE,   seed = 42,    verbose = FALSE,      # Search strategy options   constant_layer_size = FALSE,     # Allow different sizes per layer   evaluate_all_orders = FALSE,     # Sample layer arrangements efficiently   max_exhaustive_orders = 100,     # Limit for exhaustive search      ## Hyperparameter search space   num_hidden_layers = c(2, 5),     # Try 2-5 hidden layers   hidden_dims = c(64, 512),        # Layer sizes from 64 to 512   latent_dim = c(10, 100),         # Latent dimension range   latent_shared = c(TRUE, FALSE),   output_shared = c(TRUE, FALSE),   lr = 0.01,  # Learning rate range   decay_factor = 0.99,   beta = 0.01,  # KL weight range   num_epochs = 500,                # Fixed epochs for demo   batch_size = c(1000, 4000),     # Batch size options   num_shared_encode = c(0, 1, 2, 3),   num_shared_decode = c(0, 1, 2, 3),      # Layer placement strategies - try different arrangements   encoder_shared_placement = c(\"at_end\", \"at_start\", \"alternating\", \"random\"),   decoder_shared_placement = c(\"at_start\", \"at_end\", \"alternating\", \"random\"),      refit_patience = 2,        # Early stopping patience   refit_loops = 100,                # Fixed refit loops   epochs_per_loop = 100,   # Epochs per refit loop   reset_lr_refit = c(TRUE, FALSE) )  # Analyze results imputed <- aut$imputed best_model <- aut$model study <- aut$study results <- aut$results  # View best hyperparameters cat(\"Best validation MSE:\", study$best_value, \"\\n\") print(\"Best trial parameters:\") best_trial <- results[results$trial_number == study$best_trial$number, ] print(best_trial[, c(\"latent_dim\", \"lr\", \"encoder_shared_placement\", \"decoder_shared_placement\", \"val_mse\")])  # Plot model architecture plot_vae_architecture(best_model, title = \"Optimized CISSVAE Architecture\") #> Starting Optuna optimization with 3 trials... #>  #> Trial 10/3 #> Parameters: layers=5, latent_dim=10, lr=1.00e-02, batch_size=1000 #> Initial training ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:01 #> Refit loops ━━━                                        8% 0:01:43 #> ✓ Trial 10 complete - MSE: 22.5942 #>  #> Trial 11/3 #> Parameters: layers=2, latent_dim=100, lr=1.00e-02, batch_size=1000 #> Initial training ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:01 #> Refit loops ━━━━━━━━━━━━━━━━                          41% 0:01:24 #> ✓ Trial 11 complete - MSE: 16.6192 #>  #> Trial 12/3 #> Parameters: layers=2, latent_dim=100, lr=1.00e-02, batch_size=4000 #> Initial training ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:01 #> Refit loops ━━━━━━━━━╸                                25% 0:01:12 #> ✓ Trial 12 complete - MSE: 69.4747 #>  #> ✓ Optimization complete! #> Best trial: 3 (MSE: 9.621054) #>  #> Training final model with best parameters... #> Final initial training ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:02 #> ✓ Final model training complete! #> Final refit loops ╸                                          2% 0:04:05 #> Best validation MSE: 9.621054 #> [1] \"Trial results:\" #>   trial_number    val_mse num_hidden_layers hidden_dim_0 hidden_dim_1 #> 1            0  65.753204                 5          512          512 #> 2            1  28.920498                 5           64           64 #> 3            2 449.029846                 2          512           64 #> 4            3   9.621054                 2          512          512 #> 5            4  19.456476                 2          512           64 #> 6            5  11.771402                 2          512           64 #>   hidden_dim_2 hidden_dim_3 hidden_dim_4 latent_dim latent_shared output_shared #> 1          512          512          512         10         FALSE          TRUE #> 2          512           64           64         10         FALSE         FALSE #> 3          NaN          NaN          NaN        100          TRUE          TRUE #> 4          NaN          NaN          NaN        100         FALSE         FALSE #> 5          NaN          NaN          NaN        100         FALSE          TRUE #> 6          NaN          NaN          NaN         10          TRUE          TRUE #>   batch_size num_shared_encode num_shared_decode encoder_shared_placement #> 1       4000                 1                 0                 at_start #> 2       1000                 1                 2                 at_start #> 3       1000                 3                 3                   at_end #> 4       1000                 2                 3                   at_end #> 5       4000                 1                 3                   at_end #> 6       4000                 2                 1              alternating #>   decoder_shared_placement reset_lr_refit layer_order_enc_used #> 1              alternating          FALSE            S,U,U,U,U #> 2                   random           TRUE            S,U,U,U,U #> 3              alternating          FALSE                  S,S #> 4              alternating           TRUE                  S,S #> 5              alternating          FALSE                  U,S #> 6                   random          FALSE                  S,S #>   layer_order_dec_used #> 1            U,U,U,U,U #> 2            U,U,S,S,U #> 3                  S,S #> 4                  S,S #> 5                  S,S #> 6                  U,S #> Plot saved to: autotune_vae_arch.png"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/vignette.html","id":"using-pre-computed-missingness-proportion-matrix-not-quite-working-yet","dir":"Articles","previous_headings":"Quickstart","what":"Using Pre-computed Missingness Proportion Matrix – not quite working yet","title":"rCISSVAE Vignette","text":"advanced control clustering process, can provide pre-computed missingness proportion matrix directly run_cissvae():","code":"## Standardize df_missing column names to feature_timepoint format colnames(df_missing) = c('index', 'Age', 'Salary', 'ZipCode10001', 'ZipCode20002', 'ZipCode30003', 'Y1_1', 'Y1_2', 'Y1_3', 'Y1_4', 'Y1_5', 'Y2_1', 'Y2_2', 'Y2_3', 'Y2_4', 'Y2_5', 'Y3_1', 'Y3_2', 'Y3_3', 'Y3_4', 'Y3_5', 'Y4_1', 'Y4_2', 'Y4_3', 'Y4_4', 'Y4_5', 'Y5_1', 'Y5_2', 'Y5_3', 'Y5_4', 'Y5_5')  # Create and examine missingness proportion matrix prop_matrix <- create_missingness_prop_matrix(df_missing,  index_col = \"index\",  cols_ignore = c('Age', 'Salary', 'ZipCode10001', 'ZipCode20002', 'ZipCode30003'), repeat_feature_names = c(\"Y1\", \"Y2\", \"Y3\", \"Y4\", \"Y5\"))   print(\"Missingness proportion matrix dimensions:\") print(dim(prop_matrix)) print(\"Sample of proportion matrix:\") print(head(prop_matrix[, 1:5]))  # Use proportion matrix with scaling for better clustering advanced_result <- run_cissvae(   data = df_missing,   index_col = \"index\",   clusters = NULL,  # Let function cluster using prop_matrix   missingness_proportion_matrix = prop_matrix,   scale_features = TRUE,  # Standardize features before clustering   n_clusters = 4,   cluster_selection_epsilon = 0.1,  # HDBSCAN parameter   epochs = 5,   return_history = TRUE,   return_silhouettes = TRUE,   device = \"cpu\",   verbose = FALSE )  print(\"Clustering quality:\") print(paste(\"Silhouette score:\", round(advanced_result$silhouettes, 3)))  # Plot training history if (!is.null(advanced_result$history)) {   plot(advanced_result$history$epoch, advanced_result$history$val_mse,         type = \"l\", main = \"Validation MSE During Training\",         xlab = \"Epoch\", ylab = \"Validation MSE\") }"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Manual Virtual Environment Setup Tutorial","text":"starting, ensure : Python 3.10 3.11 installed system R reticulate package installed can check Python version running:","code":"install.packages(\"reticulate\") python --version # or python3 --version"},{"path":[]},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-1-install-reticulate-if-not-already-installed","dir":"Articles","previous_headings":"Method 1: Creating Virtual Environment with R (reticulate)","what":"Step 1: Install reticulate (if not already installed)","title":"Manual Virtual Environment Setup Tutorial","text":"","code":"install.packages(\"reticulate\") library(reticulate)"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-2-check-available-python-versions","dir":"Articles","previous_headings":"Method 1: Creating Virtual Environment with R (reticulate)","what":"Step 2: Check available Python versions","title":"Manual Virtual Environment Setup Tutorial","text":"","code":"# Find Python installations on your system reticulate::py_discover_config()  # Or check for a specific version reticulate::virtualenv_starter(\"3.10\")"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"installing-python-via-reticulate-if-needed","dir":"Articles","previous_headings":"Method 1: Creating Virtual Environment with R (reticulate) > Step 2: Check available Python versions","what":"Installing Python via reticulate (if needed)","title":"Manual Virtual Environment Setup Tutorial","text":"suitable Python version found, can install Python directly reticulate: Note: reticulate::install_python() : Download install standalone Python version managed reticulate Install location doesn’t interfere system Python Work across Windows, macOS, Linux Automatically configure PATH reticulate find installation fails prefer control, can also install Python manually: Windows: Download python.org check “Add Python PATH” macOS: Use Homebrew (brew install python@3.10) download python.org Linux: Use package manager (sudo apt install python3.10 Ubuntu) manual installation, restart R rerun reticulate::py_discover_config() verify reticulate can find new Python installation.","code":"# Install Python 3.10 (recommended) reticulate::install_python(version = \"3.10\")  # Or install Python 3.11 reticulate::install_python(version = \"3.11\")  # Check available versions after installation reticulate::py_versions()  # Verify the installation worked reticulate::virtualenv_starter(\"3.10\")"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-3-create-the-virtual-environment","dir":"Articles","previous_headings":"Method 1: Creating Virtual Environment with R (reticulate)","what":"Step 3: Create the virtual environment","title":"Manual Virtual Environment Setup Tutorial","text":"’ve identified python installation want use, can use reticulate package create virtual environment either default location (~/.virtualenvs/) directory choice.","code":"# Create virtual environment in default location (~/.virtualenvs/) reticulate::virtualenv_create(   envname = \"cissvae_env\",   python = NULL,  # Use system default Python   packages = c(\"pip\", \"setuptools\", \"wheel\") )  # Alternative: Create in a specific directory reticulate::virtualenv_create(   envname = \"./my_venvs/cissvae_env\",  # Relative path   python = \"/usr/bin/python3.10\",     # Specific Python version   packages = c(\"pip\", \"setuptools\", \"wheel\") )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-4-activate-the-environment","dir":"Articles","previous_headings":"Method 1: Creating Virtual Environment with R (reticulate)","what":"Step 4: Activate the environment","title":"Manual Virtual Environment Setup Tutorial","text":"order use virtual environment, tell reticulate activate use command . repeat command new R session want use virtual environment .","code":"# Activate environment (default location) reticulate::use_virtualenv(\"cissvae_env\", required = TRUE)  # Or activate from specific path reticulate::use_virtualenv(\"./my_venvs/cissvae_env\", required = TRUE)"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-5-install-required-packages","dir":"Articles","previous_headings":"Method 1: Creating Virtual Environment with R (reticulate)","what":"Step 5: Install required packages","title":"Manual Virtual Environment Setup Tutorial","text":"using virtual environment first time, install necessary dependencies ciss-vae python package environment. needs done per environment (unless want update packages later).","code":"# Install core dependencies first reticulate::virtualenv_install(   envname = \"cissvae_env\",   packages = c(     \"numpy\",     \"pandas\",      \"torch\",     \"scikit-learn\",     \"optuna\",     \"rich\",     \"matplotlib\",     \"hdbscan\"   ) )  # Install CISS-VAE from PyPI reticulate::virtualenv_install(   envname = \"cissvae_env\",   packages = \"ciss-vae\" )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-6-verify-installation","dir":"Articles","previous_headings":"Method 1: Creating Virtual Environment with R (reticulate)","what":"Step 6: Verify installation","title":"Manual Virtual Environment Setup Tutorial","text":"installing packages, can use following commands make sure ciss_vae package installed correctly.","code":"# Check if CISS-VAE installed correctly reticulate::py_run_string(\"import ciss_vae; print('CISS-VAE version:', ciss_vae.__version__)\")  # List all installed packages reticulate::virtualenv_install(envname = \"cissvae_env\", packages = character(0))"},{"path":[]},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-1-open-terminalcommand-prompt","dir":"Articles","previous_headings":"Method 2: Creating Virtual Environment from Command Line","what":"Step 1: Open terminal/command prompt","title":"Manual Virtual Environment Setup Tutorial","text":"Navigate desired directory:","code":"cd /path/to/your/project"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-2-create-virtual-environment","dir":"Articles","previous_headings":"Method 2: Creating Virtual Environment from Command Line","what":"Step 2: Create virtual environment","title":"Manual Virtual Environment Setup Tutorial","text":"Please note, python must installed work.","code":"# Using venv (Python 3.3+) python -m venv cissvae_env  # Or using python3 explicitly python3 -m venv cissvae_env  # For specific Python version python3.10 -m venv cissvae_env"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-3-activate-the-environment","dir":"Articles","previous_headings":"Method 2: Creating Virtual Environment from Command Line","what":"Step 3: Activate the environment","title":"Manual Virtual Environment Setup Tutorial","text":"Windows: Windows OS, command activate environment differs based terminal using. macOS/Linux: see (cissvae_env) beginning prompt activated.","code":"# Command Prompt cissvae_env\\Scripts\\activate  # PowerShell cissvae_env\\Scripts\\Activate.ps1  # Git Bash source cissvae_env/Scripts/activate source cissvae_env/bin/activate"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-4-upgrade-pip-and-install-packages","dir":"Articles","previous_headings":"Method 2: Creating Virtual Environment from Command Line","what":"Step 4: Upgrade pip and install packages","title":"Manual Virtual Environment Setup Tutorial","text":"","code":"# Upgrade pip first (optional) pip install --upgrade pip setuptools wheel  # Install core scientific packages pip install numpy pandas matplotlib scikit-learn  # Install machine learning frameworks pip install torch optuna rich hdbscan  # Install CISS-VAE pip install ciss-vae"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-5-verify-installation","dir":"Articles","previous_headings":"Method 2: Creating Virtual Environment from Command Line","what":"Step 5: Verify installation","title":"Manual Virtual Environment Setup Tutorial","text":"","code":"# Check Python version in environment python --version  # List installed packages pip list  # Test CISS-VAE import python -c \"import ciss_vae; print('CISS-VAE installed successfully!')\""},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"step-6-connect-r-to-your-environment","dir":"Articles","previous_headings":"Method 2: Creating Virtual Environment from Command Line","what":"Step 6: Connect R to your environment","title":"Manual Virtual Environment Setup Tutorial","text":"creating environment via command line, tell R find :","code":"library(reticulate)  # Point to your manually created environment reticulate::use_virtualenv(\"/path/to/your/project/cissvae_env\", required = TRUE)  # On Windows, the path might look like: # reticulate::use_virtualenv(\"C:/Users/YourName/project/cissvae_env\", required = TRUE)  # Verify connection reticulate::py_config()"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"alternative-using-conda-environment","dir":"Articles","previous_headings":"","what":"Alternative: Using Conda Environment","title":"Manual Virtual Environment Setup Tutorial","text":"prefer conda venv:","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"command-line-approach","dir":"Articles","previous_headings":"Alternative: Using Conda Environment","what":"Command Line Approach:","title":"Manual Virtual Environment Setup Tutorial","text":"","code":"# Create conda environment conda create -n cissvae_env python=3.10  # Activate environment conda activate cissvae_env  # Install packages conda install numpy pandas matplotlib scikit-learn pip install torch optuna rich hdbscan ciss-vae"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"r-approach","dir":"Articles","previous_headings":"Alternative: Using Conda Environment","what":"R Approach:","title":"Manual Virtual Environment Setup Tutorial","text":"","code":"# Create conda environment from R reticulate::conda_create(   envname = \"cissvae_env\",   python_version = \"3.10\",   packages = c(\"numpy\", \"pandas\", \"matplotlib\", \"scikit-learn\") )  # Activate and install additional packages reticulate::use_condaenv(\"cissvae_env\", required = TRUE) reticulate::conda_install(\"cissvae_env\", c(\"torch\", \"optuna\", \"rich\", \"hdbscan\", \"ciss-vae\"))"},{"path":[]},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"issue-1-python-not-found","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Issue 1: “Python not found”","title":"Manual Virtual Environment Setup Tutorial","text":"Solution: Ensure Python system PATH, specify full path:","code":"reticulate::virtualenv_create(   envname = \"cissvae_env\",   python = \"/usr/local/bin/python3.10\"  # Full path to Python )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"issue-2-permission-denied-errors","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Issue 2: “Permission denied” errors","title":"Manual Virtual Environment Setup Tutorial","text":"Solution: Windows: Run R/RStudio Administrator macOS/Linux: Check directory permissions use different location","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"issue-3-package-installation-fails","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Issue 3: Package installation fails","title":"Manual Virtual Environment Setup Tutorial","text":"Solution: Install packages one one identify problematic package:","code":"packages <- c(\"numpy\", \"pandas\", \"torch\", \"ciss-vae\") for (pkg in packages) {   cat(\"Installing\", pkg, \"...\\n\")   reticulate::virtualenv_install(\"cissvae_env\", pkg) }"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"issue-4-ciss-vae-import-fails-in-r","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Issue 4: CISS-VAE import fails in R","title":"Manual Virtual Environment Setup Tutorial","text":"Solution: Verify environment properly activated:","code":"# Check Python configuration reticulate::py_config()  # Test import manually reticulate::py_run_string(\" try:     import ciss_vae     print('Success: ciss_vae imported')     print('Version:', ciss_vae.__version__) except ImportError as e:     print('Error importing ciss_vae:', e) \")"},{"path":"https://ciss-vae.github.io/rCISS-VAE/articles/virtual_environment_tutorial.html","id":"issue-5-environment-not-persisting-between-r-sessions","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Issue 5: Environment not persisting between R sessions","title":"Manual Virtual Environment Setup Tutorial","text":"Solution: Always activate environment start R session:","code":"# Add this to the top of your R scripts library(reticulate) reticulate::use_virtualenv(\"cissvae_env\", required = TRUE)  # Or add to your .Rprofile for automatic loading cat('reticulate::use_virtualenv(\"cissvae_env\", required = TRUE)\\n',      file = \"~/.Rprofile\", append = TRUE)"},{"path":"https://ciss-vae.github.io/rCISS-VAE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yasin Khadem Charvadeh. Author. Danielle Vaithilingam. Author, maintainer.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Khadem Charvadeh Y, Vaithilingam D (2025). rCISSVAE: Clustering-Informed Shared-Structure Variational Autoencoder (CISS-VAE) Imputation Missing Data. R package version 0.0.1.0000, https://ciss-vae.github.io/rCISS-VAE.","code":"@Manual{,   title = {rCISSVAE: Clustering-Informed Shared-Structure Variational Autoencoder (CISS-VAE) for Imputation of Missing Data},   author = {Yasin {Khadem Charvadeh} and Danielle Vaithilingam},   year = {2025},   note = {R package version 0.0.1.0000},   url = {https://ciss-vae.github.io/rCISS-VAE}, }"},{"path":"https://ciss-vae.github.io/rCISS-VAE/index.html","id":"rciss-vae---work-in-progress","dir":"","previous_headings":"","what":"Clustering-Informed Shared-Structure Variational Autoencoder (CISS-VAE) for Imputation of Missing Data","title":"Clustering-Informed Shared-Structure Variational Autoencoder (CISS-VAE) for Imputation of Missing Data","text":"R implementation Clustering-Informed Shared-Structure Variational Autoencoder (CISS-VAE). Python implementation can found .","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Clustering-Informed Shared-Structure Variational Autoencoder (CISS-VAE) for Imputation of Missing Data","text":"Install devtools remotes already installed: rCISSVAE package can installed :","code":"install.packages(\"remotes\") # or install.packages(\"devtools\") remotes::install_github(\"CISS-VAE/rCISS-VAE\") # or devtools::install_github(\"CISS-VAE/rCISS-VAE\")"},{"path":"https://ciss-vae.github.io/rCISS-VAE/index.html","id":"ensuring-correct-virtual-environment-for-reticulate","dir":"","previous_headings":"","what":"Ensuring correct virtual environment for reticulate","title":"Clustering-Informed Shared-Structure Variational Autoencoder (CISS-VAE) for Imputation of Missing Data","text":"package uses reticulate interface python version package cissvae. Therefore, necessary make sure venv conda environment set cissvae package installed. comfortable creating environment installing package, great! need tell reticulate point. Venv conda","code":"reticulate::use_virtualenv(\"./.venv\", required = TRUE) reticulate::use_condaenv(\"myenv\", required = TRUE)"},{"path":"https://ciss-vae.github.io/rCISS-VAE/index.html","id":"virtual-environment-helper-function","dir":"","previous_headings":"Ensuring correct virtual environment for reticulate","what":"Virtual environment helper function","title":"Clustering-Informed Shared-Structure Variational Autoencoder (CISS-VAE) for Imputation of Missing Data","text":"want manually create virtual environment, can use helper function create_cissvae_env() create virtual environment (venv) current working directory. environment created, activate using:","code":"create_cissvae_env(   envname = \"cissvae_environment\", ## name of environment   path = NULL, ## add path to wherever you want virtual environment to be   install_python = FALSE, ## set to TRUE if you want create_cisssvae_env to install python for you   python_version = \"3.10\" ## set to whatever version you want >=3.10. Python 3.10 or 3.11 recommended ) reticulate::use_virtualenv(\"./cissvae_environment\", required = TRUE)  # In other words, # reticulate::use_virtualenv(\"./your_environment_name\", required = TRUE)"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/autotune_cissvae.html","id":null,"dir":"Reference","previous_headings":"","what":"Autotune CISS-VAE hyperparameters with Optuna — autotune_cissvae","title":"Autotune CISS-VAE hyperparameters with Optuna — autotune_cissvae","text":"Performs hyperparameter optimization CISS-VAE using Optuna, support Rich progress bars flexible layer arrangement strategies.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/autotune_cissvae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autotune CISS-VAE hyperparameters with Optuna — autotune_cissvae","text":"","code":"autotune_cissvae(   data,   index_col = NULL,   clusters,   save_model_path = NULL,   save_search_space_path = NULL,   n_trials = 20,   study_name = \"vae_autotune\",   device_preference = \"cuda\",   show_progress = FALSE,   optuna_dashboard_db = NULL,   load_if_exists = TRUE,   seed = 42,   verbose = FALSE,   constant_layer_size = FALSE,   evaluate_all_orders = FALSE,   max_exhaustive_orders = 100,   num_hidden_layers = c(1, 4),   hidden_dims = c(64, 512),   latent_dim = c(10, 100),   latent_shared = c(TRUE, FALSE),   output_shared = c(TRUE, FALSE),   lr = c(1e-04, 0.001),   decay_factor = c(0.9, 0.999),   beta = 0.01,   num_epochs = 500,   batch_size = 4000,   num_shared_encode = c(0, 1, 3),   num_shared_decode = c(0, 1, 3),   encoder_shared_placement = c(\"at_end\", \"at_start\", \"alternating\", \"random\"),   decoder_shared_placement = c(\"at_start\", \"at_end\", \"alternating\", \"random\"),   refit_patience = 2,   refit_loops = 100,   epochs_per_loop = 500,   reset_lr_refit = c(TRUE, FALSE) )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/autotune_cissvae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autotune CISS-VAE hyperparameters with Optuna — autotune_cissvae","text":"data Data frame matrix containing input data index_col String name index column preserve (optional) clusters Integer vector specifying cluster assignments row save_model_path Optional path save best model's state_dict save_search_space_path Optional path save search space configuration n_trials Number Optuna trials run study_name Name identifier Optuna study device_preference Preferred device (\"cuda\" \"cpu\") show_progress Whether display Rich progress bars training optuna_dashboard_db RDB storage URL/file Optuna dashboard load_if_exists Whether load existing study storage seed Base random seed reproducible results verbose Whether print detailed diagnostic information constant_layer_size Whether hidden layers use dimension evaluate_all_orders Whether test possible layer arrangements max_exhaustive_orders Max arrangements test evaluate_all_orders=TRUE num_hidden_layers Numeric(2) vector: (min, max) number hidden layers hidden_dims Numeric vector: hidden layer dimensions test latent_dim Numeric(2) vector: (min, max) latent dimension latent_shared Logical vector: whether latent space shared across clusters output_shared Logical vector: whether output layer shared across clusters lr Numeric(2) vector: (min, max) learning rate range decay_factor Numeric(2) vector: (min, max) LR decay factor range beta Numeric: KL divergence weight (fixed range) num_epochs Integer: number initial training epochs (fixed range) batch_size Integer: mini-batch size (fixed range) num_shared_encode Numeric vector: numbers shared encoder layers test num_shared_decode Numeric vector: numbers shared decoder layers test encoder_shared_placement Character vector: placement strategies encoder shared layers decoder_shared_placement Character vector: placement strategies decoder shared layers refit_patience Integer: early stopping patience refit loops refit_loops Integer: maximum number refit loops epochs_per_loop Integer: epochs per refit loop reset_lr_refit Logical vector: whether reset LR refit","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/autotune_cissvae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autotune CISS-VAE hyperparameters with Optuna — autotune_cissvae","text":"List containing imputed data, best model, study object, results dataframe","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster on Missingness Patterns — cluster_on_missing","title":"Cluster on Missingness Patterns — cluster_on_missing","text":"Given R data.frame matrix missing values, clusters pattern missingness returns cluster labels plus silhouette score.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster on Missingness Patterns — cluster_on_missing","text":"","code":"cluster_on_missing(   data,   cols_ignore = NULL,   n_clusters = NULL,   seed = NULL,   min_cluster_size = NULL,   cluster_selection_epsilon = 0.25 )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster on Missingness Patterns — cluster_on_missing","text":"data data.frame matrix (samples × features), may contain NA. cols_ignore Character vector column names ignore clustering. n_clusters Integer; provided, run KMeans many clusters. NULL, use HDBSCAN. seed Integer; random seed KMeans (reproducibility HDBSCAN). min_cluster_size Integer; minimum cluster size HDBSCAN. NULL, defaults nrow(data) %/% 25. cluster_selection_epsilon Numeric; epsilon parameter HDBSCAN.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster on Missingness Patterns — cluster_on_missing","text":"list components: clusters   — integer vector cluster labels silhouette — numeric silhouette score, NA computable","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster Features Based on Missingness Proportions — cluster_on_missing_prop","title":"Cluster Features Based on Missingness Proportions — cluster_on_missing_prop","text":"Groups features similar patterns missingness across samples using either K-means clustering (n_clusters specified) HDBSCAN (n_clusters NULL). helps identify features tend missing together systematically.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster Features Based on Missingness Proportions — cluster_on_missing_prop","text":"","code":"cluster_on_missing_prop(   prop_matrix,   n_clusters = NULL,   seed = NULL,   min_cluster_size = NULL,   cluster_selection_epsilon = 0.25,   metric = \"euclidean\",   scale_features = FALSE,   handle_noise = \"keep\" )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster Features Based on Missingness Proportions — cluster_on_missing_prop","text":"prop_matrix Matrix data frame rows samples, columns features, entries missingness proportions 0,1. Can created create_missingness_prop_matrix(). n_clusters Number clusters KMeans; NULL, uses HDBSCAN (default: NULL) seed Random seed KMeans reproducibility (default: NULL) min_cluster_size HDBSCAN minimum cluster size; NULL, uses max(2, n_features/25) (default: NULL) cluster_selection_epsilon HDBSCAN cluster selection threshold (default: 0.25) metric Distance metric - \"euclidean\" \"cosine\" (default: \"euclidean\") scale_features Whether standardize feature vectors clustering (default: FALSE) handle_noise handle HDBSCAN noise points: \"keep\" (default), \"separate\", \"merge\"","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster Features Based on Missingness Proportions — cluster_on_missing_prop","text":"List containing: labels: Integer vector cluster assignments feature (includes -1 noise HDBSCAN) labels_positive: Integer vector noise points converted positive cluster IDs silhouette_score: Silhouette score clustering quality (NULL calculable) feature_names: Names features corresponding cluster labels n_noise: Number features assigned noise (HDBSCAN )","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing_prop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster Features Based on Missingness Proportions — cluster_on_missing_prop","text":"Note: HDBSCAN may assign features \"noise\" (cluster -1). features kept treated individual clusters CISS-VAE.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/cluster_on_missing_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster Features Based on Missingness Proportions — cluster_on_missing_prop","text":"","code":"# Create sample data with systematic missingness patterns set.seed(123) data <- data.frame(   sample_id = 1:100,   # Group 1: High missingness in first 50 samples   feat1 = c(rep(NA, 50), rnorm(50)),   feat2 = c(rep(NA, 45), rnorm(55)),   feat3 = c(rep(NA, 48), rnorm(52)),   # Group 2: High missingness in last 50 samples     feat4 = c(rnorm(50), rep(NA, 50)),   feat5 = c(rnorm(52), rep(NA, 48)),   # Group 3: Low missingness throughout   feat6 = c(rnorm(90), rep(NA, 10)),   feat7 = c(rnorm(88), rep(NA, 12)) )  # Create proportion matrix prop_mat <- create_missingness_prop_matrix(data, index_col = \"sample_id\")  # Cluster features by missingness pattern clusters <- cluster_on_missing_prop(prop_mat, n_clusters = 3) #> Error in import(\"ciss_vae.utils.helpers\", convert = FALSE): could not find function \"import\" print(clusters$labels) #> Warning: Unknown or uninitialised column: `labels`. #> NULL print(clusters$silhouette_score) #> Warning: Unknown or uninitialised column: `silhouette_score`. #> NULL"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster assignments based on missingness patterns — clusters","title":"Cluster assignments based on missingness patterns — clusters","text":"tibble assigning observation df_missing/df_complete cluster determined missingness pattern.  Useful stratifying downstream analyses.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster assignments based on missingness patterns — clusters","text":"","code":"clusters"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/clusters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cluster assignments based on missingness patterns — clusters","text":"tibble 8000 rows 2 variables: index Integer. Row identifier imported data_raw/clusters.csv. cluster Factor (integer) giving missingness‐based cluster row.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/clusters.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cluster assignments based on missingness patterns — clusters","text":"Imported data_raw/clusters.csv, renamed ...1 → index.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster assignments based on missingness patterns — clusters","text":"","code":"data(clusters) table(clusters$cluster) #> Warning: Unknown or uninitialised column: `cluster`. #> < table of extent 0 >"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/create_cissvae_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or reuse a CISSVAE Python virtual environment — create_cissvae_env","title":"Create or reuse a CISSVAE Python virtual environment — create_cissvae_env","text":"function either find existing virtualenv name (default location) custom filesystem path, create (install CISSVAE ).","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/create_cissvae_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or reuse a CISSVAE Python virtual environment — create_cissvae_env","text":"","code":"create_cissvae_env(   envname = \"cissvae_environment\",   path = NULL,   install_python = FALSE,   python_version = \"3.10\" )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/create_cissvae_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or reuse a CISSVAE Python virtual environment — create_cissvae_env","text":"envname Name virtual environment (using default env location). path Character; optional path directory create/use virtualenv. install_python Logical; TRUE, install Python none least requested version found system. python_version Python version string (major.minor), used installing Python.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/create_missingness_prop_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Missingness Proportion Matrix — create_missingness_prop_matrix","title":"Create Missingness Proportion Matrix — create_missingness_prop_matrix","text":"Creates matrix entry represents proportion missing values feature across samples. matrix can used cluster_on_missing_prop identify features similar missingness patterns.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/create_missingness_prop_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Missingness Proportion Matrix — create_missingness_prop_matrix","text":"","code":"create_missingness_prop_matrix(   data,   index_col = NULL,   na_values = c(NA, NaN, Inf, -Inf),   by_row = FALSE )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/create_missingness_prop_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Missingness Proportion Matrix — create_missingness_prop_matrix","text":"data Data frame matrix containing input data potential missing values index_col String name index column exclude analysis (optional) na_values Vector values treat missing (default: c(NA, NaN, Inf, -Inf)) by_row Logical: TRUE, compute missingness row; FALSE, column (default: FALSE)","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/create_missingness_prop_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Missingness Proportion Matrix — create_missingness_prop_matrix","text":"Matrix rows samples columns features, entries missingness proportions 0,1","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/create_missingness_prop_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Missingness Proportion Matrix — create_missingness_prop_matrix","text":"","code":"# Create sample data with missing values data <- data.frame(   sample_id = 1:100,   feature1 = c(rnorm(80), rep(NA, 20)),   feature2 = c(rep(NA, 30), rnorm(70)),   feature3 = rnorm(100) )  # Create proportion matrix prop_mat <- create_missingness_prop_matrix(data, index_col = \"sample_id\") print(dim(prop_mat))  # Should be 100 x 3 #> [1] 100   3 print(head(prop_mat)) #>   feature1 feature2 feature3 #> 1        0        1        0 #> 2        0        1        0 #> 3        0        1        0 #> 4        0        1        0 #> 5        0        1        0 #> 6        0        1        0"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete version of the sample dataset — df_complete","title":"Complete version of the sample dataset — df_complete","text":"simulated biomarker measurements df_missing, missing values— useful ground truth evaluating imputation methods.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete version of the sample dataset — df_complete","text":"","code":"df_complete"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_complete.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete version of the sample dataset — df_complete","text":"tibble 8,000 rows 30 variables containing full simulated data: index Integer. Row identifier imported data_raw/df_complete.csv. Age, Salary, ZipCode10001-ZipCode30003 Demographic columns. Y11, ..., Y55 Simulated Biomarker columns","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_complete.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Complete version of the sample dataset — df_complete","text":"Imported data_raw/df_complete.csv, renamed ...1 → index.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_complete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete version of the sample dataset — df_complete","text":"","code":"data(df_complete) head(df_complete) #> # A tibble: 6 × 31 #>   index   Age Salary ZipCode10001 ZipCode20002 ZipCode30003     Y11   Y12   Y13 #>   <dbl> <dbl>  <dbl>        <dbl>        <dbl>        <dbl>   <dbl> <dbl> <dbl> #> 1     0 11.0    6.37            0            1            0  -4.05  -27.4 -19.1 #> 2     1  9.73   5.91            1            0            0   0.546 -19.6 -12.2 #> 3     2 11.4    6.64            0            1            0  -6.25  -28.3 -20.4 #> 4     3 13.6    5.90            0            0            1 -10.6   -31.8 -24.7 #> 5     4  9.54   6.13            1            0            0   0.358 -16.5 -11.3 #> 6     5  9.54   6.39            1            0            0   4.76  -19.0 -12.3 #> # ℹ 22 more variables: Y14 <dbl>, Y15 <dbl>, Y21 <dbl>, Y22 <dbl>, Y23 <dbl>, #> #   Y24 <dbl>, Y25 <dbl>, Y31 <dbl>, Y32 <dbl>, Y33 <dbl>, Y34 <dbl>, #> #   Y35 <dbl>, Y41 <dbl>, Y42 <dbl>, Y43 <dbl>, Y44 <dbl>, Y45 <dbl>, #> #   Y51 <dbl>, Y52 <dbl>, Y53 <dbl>, Y54 <dbl>, Y55 <dbl>"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample dataset with missing values — df_missing","title":"Sample dataset with missing values — df_missing","text":"tibble simulated biomarker measurements missing entries. row corresponds one observation (indexed index), remaining columns measured biomarker values, set NA demonstrate imputation workflows.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample dataset with missing values — df_missing","text":"","code":"df_missing"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_missing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample dataset with missing values — df_missing","text":"tibble 8,000 rows 30 variables: index Integer. Row identifier imported data_raw/df_missing.csv. Age, Salary, ZipCode10001-ZipCode30003 Demographic columns. Omit selection validation set. missingness Y11, ..., Y55 Simulated Biomarker columns, missingness","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_missing.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample dataset with missing values — df_missing","text":"Imported data_raw/df_missing.csv, renamed ...1 → index.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/df_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample dataset with missing values — df_missing","text":"","code":"data(df_missing) str(df_missing) #> spc_tbl_ [8,000 × 31] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>  $ index       : num [1:8000] 0 1 2 3 4 5 6 7 8 9 ... #>  $ Age         : num [1:8000] 11.04 9.73 11.38 13.56 9.54 ... #>  $ Salary      : num [1:8000] 6.37 5.91 6.64 5.9 6.13 ... #>  $ ZipCode10001: num [1:8000] 0 1 0 0 1 1 1 0 0 0 ... #>  $ ZipCode20002: num [1:8000] 1 0 1 0 0 0 0 1 1 0 ... #>  $ ZipCode30003: num [1:8000] 0 0 0 1 0 0 0 0 0 1 ... #>  $ Y11         : num [1:8000] -4.05 0.546 NA -10.608 0.358 ... #>  $ Y12         : num [1:8000] NA NA NA NA -16.5 ... #>  $ Y13         : num [1:8000] NA -12.2 -20.4 NA -11.3 ... #>  $ Y14         : num [1:8000] -14.37 -7.72 -15.13 -14.21 NA ... #>  $ Y15         : num [1:8000] -17.6 NA -17.3 -21.3 NA ... #>  $ Y21         : num [1:8000] NA -7.47 -18.45 -21.97 -7.58 ... #>  $ Y22         : num [1:8000] NA NA NA NA -27.6 ... #>  $ Y23         : num [1:8000] -35.8 -25.9 -34.4 -40.2 NA ... #>  $ Y24         : num [1:8000] -28.1 -17.2 -27.3 -26.3 NA ... #>  $ Y25         : num [1:8000] -30.2 -18.7 -28.8 -33.4 -18.6 ... #>  $ Y31         : num [1:8000] -1.63 4.36 -2.17 -7.48 8.1 ... #>  $ Y32         : num [1:8000] NA NA NA NA -13.6 ... #>  $ Y33         : num [1:8000] -16.77 -10.93 -17.19 -25.31 -9.83 ... #>  $ Y34         : num [1:8000] -10.69 -5.89 -10.49 NA NA ... #>  $ Y35         : num [1:8000] -13.9 -6.09 -12.29 -15.43 -2.96 ... #>  $ Y41         : num [1:8000] -0.905 2.625 NA -2.825 3.617 ... #>  $ Y42         : num [1:8000] NA NA NA NA -4.62 ... #>  $ Y43         : num [1:8000] NA -5.78 -7.22 -8.29 -3.86 ... #>  $ Y44         : num [1:8000] -3.69 -1.38 -3.35 -2.4 NA ... #>  $ Y45         : num [1:8000] -5.68 -2.33 -6.9 NA -1.5 ... #>  $ Y51         : num [1:8000] 2.588 6.081 2.531 0.139 NA ... #>  $ Y52         : num [1:8000] NA NA NA NA -3.34 ... #>  $ Y53         : num [1:8000] -4.68 -2.29 -5.43 -5.73 -1.92 ... #>  $ Y54         : num [1:8000] -2.248 -0.887 -1.33 -1.64 NA ... #>  $ Y55         : num [1:8000] -2.679 0.563 -2.324 -4.446 0.103 ... #>  - attr(*, \"spec\")=List of 3 #>   ..$ cols   :List of 31 #>   .. ..$ ...1        : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Age         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Salary      : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ ZipCode10001: list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ ZipCode20002: list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ ZipCode30003: list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y11         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y12         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y13         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y14         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y15         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y21         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y22         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y23         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y24         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y25         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y31         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y32         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y33         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y34         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y35         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y41         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y42         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y43         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y44         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y45         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y51         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y52         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y53         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y54         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Y55         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   ..$ default: list() #>   .. ..- attr(*, \"class\")= chr [1:2] \"collector_guess\" \"collector\" #>   ..$ delim  : chr \",\" #>   ..- attr(*, \"class\")= chr \"col_spec\" #>  - attr(*, \"problems\")=<externalptr>  summary(df_missing) #>      index           Age             Salary       ZipCode10001    #>  Min.   :   0   Min.   : 4.782   Min.   :5.000   Min.   :0.0000   #>  1st Qu.:2000   1st Qu.: 8.732   1st Qu.:5.338   1st Qu.:0.0000   #>  Median :4000   Median : 9.986   Median :5.700   Median :0.0000   #>  Mean   :4000   Mean   :10.198   Mean   :5.819   Mean   :0.3285   #>  3rd Qu.:5999   3rd Qu.:11.440   3rd Qu.:6.169   3rd Qu.:1.0000   #>  Max.   :7999   Max.   :21.929   Max.   :8.959   Max.   :1.0000   #>                                                                   #>   ZipCode20002     ZipCode30003         Y11                Y12         #>  Min.   :0.0000   Min.   :0.0000   Min.   :-66.3324   Min.   :-66.84   #>  1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:-11.1297   1st Qu.:-22.37   #>  Median :0.0000   Median :0.0000   Median : -0.4072   Median : 48.60   #>  Mean   :0.3371   Mean   :0.3344   Mean   : -2.8224   Mean   : 22.23   #>  3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:  7.2439   3rd Qu.: 58.35   #>  Max.   :1.0000   Max.   :1.0000   Max.   : 26.2178   Max.   :112.32   #>                                    NA's   :3122       NA's   :3118     #>       Y13              Y14              Y15              Y21           #>  Min.   :-74.61   Min.   :-49.70   Min.   :-46.87   Min.   :-78.8702   #>  1st Qu.:-17.25   1st Qu.:-11.98   1st Qu.:-11.56   1st Qu.:-22.0992   #>  Median : 72.43   Median : 69.08   Median : 72.28   Median : -9.4794   #>  Mean   : 42.75   Mean   : 55.55   Mean   : 63.77   Mean   :-12.2318   #>  3rd Qu.: 94.71   3rd Qu.:118.98   3rd Qu.:134.28   3rd Qu.: -0.1001   #>  Max.   :141.59   Max.   :184.63   Max.   :212.94   Max.   : 19.8433   #>  NA's   :3110     NA's   :3129     NA's   :3141     NA's   :3135       #>       Y22              Y23              Y24              Y25         #>  Min.   :-91.64   Min.   :-98.82   Min.   :-68.73   Min.   :-67.74   #>  1st Qu.:-34.60   1st Qu.:-29.16   1st Qu.:-22.44   1st Qu.:-21.76   #>  Median : 47.36   Median : 74.15   Median : 71.14   Median : 73.21   #>  Mean   : 16.04   Mean   : 39.92   Mean   : 55.14   Mean   : 63.86   #>  3rd Qu.: 57.56   3rd Qu.: 99.94   3rd Qu.:128.49   3rd Qu.:145.23   #>  Max.   :114.18   Max.   :151.39   Max.   :195.89   Max.   :231.72   #>  NA's   :3094     NA's   :3098     NA's   :3146     NA's   :3106     #>       Y31                Y32              Y33              Y34          #>  Min.   :-61.8386   Min.   :-64.36   Min.   :-77.52   Min.   :-44.738   #>  1st Qu.:-14.2448   1st Qu.:-16.84   1st Qu.:-12.68   1st Qu.: -6.078   #>  Median : -0.4389   Median : 59.39   Median : 80.92   Median : 79.149   #>  Mean   : -2.3836   Mean   : 35.48   Mean   : 54.80   Mean   : 66.597   #>  3rd Qu.: 10.5156   3rd Qu.: 69.12   3rd Qu.:101.36   3rd Qu.:124.148   #>  Max.   : 33.9299   Max.   :118.72   Max.   :153.84   Max.   :198.039   #>  NA's   :2067       NA's   :2056     NA's   :2013     NA's   :2051      #>       Y35               Y41                Y42               Y43          #>  Min.   :-43.026   Min.   :-25.0276   Min.   :-26.607   Min.   :-21.134   #>  1st Qu.: -5.815   1st Qu.: -6.4226   1st Qu.: -7.992   1st Qu.: -5.286   #>  Median : 80.878   Median : -0.0618   Median : 27.032   Median : 37.099   #>  Mean   : 73.133   Mean   : -1.0265   Mean   : 16.618   Mean   : 25.381   #>  3rd Qu.:138.746   3rd Qu.:  4.7805   3rd Qu.: 32.320   3rd Qu.: 46.395   #>  Max.   :226.577   Max.   : 14.2158   Max.   : 59.684   Max.   : 72.119   #>  NA's   :2054      NA's   :2032       NA's   :2022      NA's   :2013      #>       Y44               Y45               Y51                Y52          #>  Min.   :-17.799   Min.   :-15.073   Min.   :-19.8408   Min.   :-20.575   #>  1st Qu.: -2.974   1st Qu.: -2.927   1st Qu.: -3.6429   1st Qu.: -5.056   #>  Median : 35.892   Median : 37.450   Median :  1.8005   Median : 24.853   #>  Mean   : 30.326   Mean   : 33.814   Mean   :  0.9457   Mean   : 16.000   #>  3rd Qu.: 56.243   3rd Qu.: 63.199   3rd Qu.:  5.8282   3rd Qu.: 29.464   #>  Max.   : 94.820   Max.   :110.590   Max.   : 14.8720   Max.   : 52.764   #>  NA's   :2023      NA's   :2086      NA's   :2077       NA's   :2034      #>       Y53               Y54               Y55          #>  Min.   :-22.010   Min.   :-16.174   Min.   :-9.8664   #>  1st Qu.: -2.686   1st Qu.: -0.699   1st Qu.:-0.8639   #>  Median : 33.748   Median : 32.594   Median :33.7227   #>  Mean   : 23.584   Mean   : 27.660   Mean   :30.4929   #>  3rd Qu.: 41.398   3rd Qu.: 49.971   3rd Qu.:55.6098   #>  Max.   : 65.703   Max.   : 82.862   Max.   :95.5910   #>  NA's   :1976      NA's   :2047      NA's   :2050"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/evaluate_imputation.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate imputation accuracy (R wrapper) — evaluate_imputation","title":"Evaluate imputation accuracy (R wrapper) — evaluate_imputation","text":"Compare imputed values ground truth originally missing positions, calling Python function evaluate_imputation() defined ciss_vae module.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/evaluate_imputation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate imputation accuracy (R wrapper) — evaluate_imputation","text":"","code":"evaluate_imputation(imputed_df, df_complete, df_missing)"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/evaluate_imputation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate imputation accuracy (R wrapper) — evaluate_imputation","text":"imputed_df data.frame tibble imputed values (dim df_complete) df_complete data.frame tibble complete (ground-truth) values df_missing data.frame tibble NAs indicating original missing entries","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/evaluate_imputation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate imputation accuracy (R wrapper) — evaluate_imputation","text":"list components: mseMean squared error originally missing positions comparisonA data.frame columns row, col, true, imputed, squared_error","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/extract_cissvae_arch.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract CISSVAE architecture metadata — extract_cissvae_arch","title":"Extract CISSVAE architecture metadata — extract_cissvae_arch","text":"Extract CISSVAE architecture metadata","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/extract_cissvae_arch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract CISSVAE architecture metadata — extract_cissvae_arch","text":"","code":"extract_cissvae_arch(py_model)"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/extract_cissvae_arch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract CISSVAE architecture metadata — extract_cissvae_arch","text":"py_model reticulate-imported Python CISSVAE object.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/extract_cissvae_arch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract CISSVAE architecture metadata — extract_cissvae_arch","text":"data.frame one row per layer: phase: \"encoder\", \"latent\", \"decoder\", \"output\" layer_idx: integer index within phase type: \"shared\" \"unshared\" cluster: NA shared layers; cluster ID unshared size: integer number units","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/performance_by_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate performance metrics by cluster and subgroups — performance_by_cluster","title":"Calculate performance metrics by cluster and subgroups — performance_by_cluster","text":"Calculate performance metrics cluster subgroups","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/performance_by_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate performance metrics by cluster and subgroups — performance_by_cluster","text":"","code":"performance_by_cluster(   original_data,   model,   dataset,   clusters,   index_col = NULL,   grouping_vars = NULL,   device = \"cpu\",   metrics = c(\"mse\", \"mae\", \"correlation\"),   only_validation = TRUE,   verbose = FALSE )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/performance_by_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate performance metrics by cluster and subgroups — performance_by_cluster","text":"original_data Original data frame true values (grouping variables) model Trained Python CISS-VAE model object dataset Python ClusterDataset object used training (contains validation data) clusters Vector cluster assignments index_col Optional name index column align data grouping_vars Optional vector column names group performance (e.g., c(\"race\", \"sex\")) device Device model inference (\"cpu\" \"cuda\") metrics Vector metrics compute (default: c(\"mse\", \"mae\", \"correlation\")) only_validation Logical; TRUE, compute metrics validation (masked) entries verbose Logical; TRUE, prints debug information","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/performance_by_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate performance metrics by cluster and subgroups — performance_by_cluster","text":"Data frame performance metrics cluster optional subgroups","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/plot_cissvae_arch.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot CISS-VAE architecture schematic — plot_cissvae_arch","title":"Plot CISS-VAE architecture schematic — plot_cissvae_arch","text":"Plot CISS-VAE architecture schematic","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/plot_cissvae_arch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot CISS-VAE architecture schematic — plot_cissvae_arch","text":"","code":"plot_cissvae_arch(   model_or_arch,   title = NULL,   color_shared = \"skyblue\",   color_unshared = \"lightcoral\",   color_input = \"lightgreen\",   color_latent = \"gold\",   color_output = \"lightgreen\",   layer_gap = 2,   phase_gap = 0.5,   y_gap = 2,   box_w = 1.2,   box_h = 1 )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/plot_cissvae_arch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot CISS-VAE architecture schematic — plot_cissvae_arch","text":"model_or_arch Python CISSVAE object (reticulate) title Optional title color_shared Fill shared layers color_unshared Fill unshared layers color_input Fill override Input color_latent Fill override Latent color_output Fill override Output layer_gap Horizontal gap layers phase phase_gap Horizontal gap phases y_gap Vertical gap cluster rows box_w Box width box_h Box height unshared layers","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/plot_vae_architecture.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot VAE Architecture Diagram — plot_vae_architecture","title":"Plot VAE Architecture Diagram — plot_vae_architecture","text":"Creates horizontal schematic diagram CISS-VAE architecture, showing shared cluster-specific layers. function wraps Python plot_vae_architecture function ciss_vae package.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/plot_vae_architecture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot VAE Architecture Diagram — plot_vae_architecture","text":"","code":"plot_vae_architecture(   model,   title = NULL,   color_shared = \"skyblue\",   color_unshared = \"lightcoral\",   color_latent = \"gold\",   color_input = \"lightgreen\",   color_output = \"lightgreen\",   figsize = c(16, 8),   save_path = NULL,   dpi = 300,   return_plot = FALSE,   display_plot = TRUE )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/plot_vae_architecture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot VAE Architecture Diagram — plot_vae_architecture","text":"model trained CISSVAE model object (Python object) title Title plot. NULL, title displayed. Default NULL. color_shared Color shared hidden layers. Default \"skyblue\". color_unshared Color unshared (cluster-specific) hidden layers. Default \"lightcoral\". color_latent Color latent layer. Default \"gold\". color_input Color input layer. Default \"lightgreen\". color_output Color output layer. Default \"lightgreen\". figsize Size matplotlib figure c(width, height). Default c(16, 8). save_path Optional path save plot PNG. NULL, plot displayed. Default NULL. dpi Resolution saved PNG file. Default 300. return_plot Logical; TRUE, returns plot R object using reticulate. Default FALSE. display_plot Logical; TRUE, displays plot. Set FALSE saving. Default TRUE.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/plot_vae_architecture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot VAE Architecture Diagram — plot_vae_architecture","text":"return_plot TRUE, returns Python matplotlib figure object can manipulated. Otherwise returns NULL invisibly.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/plot_vae_architecture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot VAE Architecture Diagram — plot_vae_architecture","text":"","code":"if (FALSE) { # \\dontrun{ # Train a model first result <- run_cissvae(my_data, return_model = TRUE)  # Basic plot plot_vae_architecture(result$model)  # Save plot to file plot_vae_architecture(   model = result$model,   title = \"CISS-VAE Architecture\",   save_path = \"vae_architecture.png\",   dpi = 300 )  # Return plot object for further manipulation fig <- plot_vae_architecture(   model = result$model,   return_plot = TRUE,   display_plot = FALSE ) } # }"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/run_cissvae.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the CISS-VAE pipeline for missing data imputation — run_cissvae","title":"Run the CISS-VAE pipeline for missing data imputation — run_cissvae","text":"function wraps Python run_cissvae function ciss_vae module, providing complete pipeline missing data imputation using Cluster-Informed Shared Specific Variational Autoencoder (CISS-VAE). function handles data preprocessing, model training, returns imputed data along optional model artifacts. CISS-VAE architecture uses cluster information learn shared cluster-specific representations, enabling accurate imputation leveraging patterns within across different data subgroups.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/run_cissvae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the CISS-VAE pipeline for missing data imputation — run_cissvae","text":"","code":"run_cissvae(   data,   index_col = NULL,   val_proportion = 0.1,   replacement_value = 0,   columns_ignore = NULL,   print_dataset = TRUE,   clusters = NULL,   n_clusters = NULL,   cluster_selection_epsilon = 0.25,   seed = 42,   missingness_proportion_matrix = NULL,   scale_features = FALSE,   hidden_dims = c(150, 120, 60),   latent_dim = 15,   layer_order_enc = c(\"unshared\", \"unshared\", \"unshared\"),   layer_order_dec = c(\"shared\", \"shared\", \"shared\"),   latent_shared = FALSE,   output_shared = FALSE,   batch_size = 4000,   return_model = TRUE,   epochs = 500,   initial_lr = 0.01,   decay_factor = 0.999,   beta = 0.001,   device = NULL,   max_loops = 100,   patience = 2,   epochs_per_loop = NULL,   initial_lr_refit = NULL,   decay_factor_refit = NULL,   beta_refit = NULL,   verbose = FALSE,   return_silhouettes = FALSE,   return_history = FALSE,   return_dataset = FALSE )"},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/run_cissvae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the CISS-VAE pipeline for missing data imputation — run_cissvae","text":"data data.frame matrix (samples × features) containing data impute. May contain NA values imputed. index_col Character. Name column data treat sample identifier. column removed training re-attached results. Default NULL. val_proportion Numeric. Fraction non-missing entries hold validation training. Must 0 1. Default 0.1. replacement_value Numeric. Fill value masked entries training. Default 0.0. columns_ignore Character integer vector. Columns exclude training. Can specify name index. Default NULL. print_dataset Logical. TRUE, prints dataset summary information processing. Default TRUE. clusters Optional vector single-column data.frame precomputed cluster labels samples. NULL, clustering performed automatically. Default NULL. n_clusters Integer. Number clusters KMeans clustering clusters NULL. NULL, optimal number determined automatically. Default NULL. cluster_selection_epsilon Numeric. Epsilon parameter HDBSCAN clustering automatic clustering used. Default 0.25. seed Integer. Random seed reproducible results. Default 42. missingness_proportion_matrix Optional pre-computed missingness proportion matrix biomarker-based clustering. provided, clustering based missingness patterns. Default NULL. scale_features Logical. Whether scale features using missingness proportion matrix clustering. Default FALSE. hidden_dims Integer vector. Sizes hidden layers encoder/decoder. Length determines number hidden layers. Default c(150, 120, 60). latent_dim Integer. Dimension latent space representation. Default 15. layer_order_enc Character vector. Sharing pattern encoder layers. element \"shared\" \"unshared\". Length must match length(hidden_dims). Default c(\"unshared\", \"unshared\", \"unshared\"). layer_order_dec Character vector. Sharing pattern decoder layers. element \"shared\" \"unshared\". Length must match length(hidden_dims). Default c(\"shared\", \"shared\", \"shared\"). latent_shared Logical. Whether latent space weights shared across clusters. Default FALSE. output_shared Logical. Whether output layer weights shared across clusters. Default FALSE. batch_size Integer. Mini-batch size training. Larger values may improve training stability require memory. Default 4000. return_model Logical. TRUE, returns trained Python VAE model object. Default TRUE. epochs Integer. Number epochs initial training phase. Default 500. initial_lr Numeric. Initial learning rate optimizer. Default 0.01. decay_factor Numeric. Exponential decay factor learning rate scheduling. Must 0 1. Default 0.999. beta Numeric. Weight KL divergence term VAE loss function. Controls regularization strength. Default 0.001. device Character. Device specification computation (\"cpu\" \"cuda\"). NULL, automatically selects best available device. Default NULL. max_loops Integer. Maximum number impute-refit loops perform. Default 100. patience Integer. Early stopping patience refit loops. Training stops validation loss improve many consecutive loops. Default 2. epochs_per_loop Integer. Number epochs per refit loop. NULL, uses value epochs. Default NULL. initial_lr_refit Numeric. Learning rate refit loops. NULL, uses value initial_lr. Default NULL. decay_factor_refit Numeric. Decay factor refit loops. NULL, uses value decay_factor. Default NULL. beta_refit Numeric. KL weight refit loops. NULL, uses value beta. Default NULL. verbose Logical. TRUE, prints detailed progress information training. Default FALSE. return_silhouettes Logical. TRUE, returns silhouette scores cluster quality assessment. Default FALSE. return_history Logical. TRUE, returns training history data.frame containing loss values metrics epochs. Default FALSE. return_dataset Logical. TRUE, returns ClusterDataset object used training (contains validation data, masks, etc.). Default FALSE.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/run_cissvae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the CISS-VAE pipeline for missing data imputation — run_cissvae","text":"list containing imputed data optional additional outputs: imputed data.frame imputed data dimensions input. Missing values filled model predictions. index_col provided, re-attached first column. model (return_model=TRUE) Python CISSVAE model object. Can used analysis predictions. dataset (return_dataset=TRUE) Python ClusterDataset object containing validation data, masks, normalization parameters, cluster labels. Can used performance_by_cluster() analysis functions. silhouettes (return_silhouettes=TRUE) Numeric silhouette score measuring cluster separation quality. history (return_history=TRUE) data.frame containing training history columns epoch, losses, validation metrics.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/run_cissvae.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the CISS-VAE pipeline for missing data imputation — run_cissvae","text":"CISS-VAE method works two main phases: Initial Training: model trained original data validation holdout learn initial representations imputation patterns. Impute-Refit Loops: model iteratively imputes missing values retrains updated dataset convergence maximum loops reached. architecture uses shared cluster-specific layers capture: Shared patterns: Common relationships across clusters Specific patterns: Unique relationships within cluster","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/run_cissvae.html","id":"requirements","dir":"Reference","previous_headings":"","what":"Requirements","title":"Run the CISS-VAE pipeline for missing data imputation — run_cissvae","text":"function requires Python ciss_vae package installed accessible via reticulate. package handles automatic device selection (CPU/GPU) based availability.","code":""},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/run_cissvae.html","id":"performance-tips","dir":"Reference","previous_headings":"","what":"Performance Tips","title":"Run the CISS-VAE pipeline for missing data imputation — run_cissvae","text":"Use GPU computation available faster training large datasets Adjust batch_size based available memory (larger = faster memory) Start default hyperparameters adjust based validation performance Use verbose=TRUE monitor training progress large datasets","code":""},{"path":[]},{"path":"https://ciss-vae.github.io/rCISS-VAE/reference/run_cissvae.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the CISS-VAE pipeline for missing data imputation — run_cissvae","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage with automatic clustering result <- run_cissvae(   data = my_data_with_missing,   index_col = \"sample_id\" ) imputed_data <- result$imputed  # Advanced usage with dataset for performance analysis result <- run_cissvae(   data = my_data,   clusters = my_cluster_labels,   hidden_dims = c(200, 150, 100),   latent_dim = 20,   epochs = 1000,   return_history = TRUE,   return_silhouettes = TRUE,   return_dataset = TRUE,   verbose = TRUE )  # Access different outputs imputed_data <- result$imputed training_history <- result$history cluster_quality <- result$silhouettes  # Use dataset for performance analysis perf <- performance_by_cluster(   original_data = my_data,   model = result$model,   dataset = result$dataset,   clusters = my_cluster_labels )  # Using pre-computed missingness matrix for clustering prop_matrix <- create_missingness_prop_matrix(   data = my_data,    index_col = \"sample_id\" ) result <- run_cissvae(   data = my_data,   index_col = \"sample_id\",   missingness_proportion_matrix = prop_matrix,   scale_features = TRUE,   return_dataset = TRUE )  # Custom layer sharing patterns result <- run_cissvae(   data = my_data,   hidden_dims = c(100, 80, 60),   layer_order_enc = c(\"unshared\", \"shared\", \"shared\"),   layer_order_dec = c(\"shared\", \"shared\", \"unshared\"),   latent_shared = TRUE ) } # }"}]
