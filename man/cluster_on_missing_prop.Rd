% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_fun.R
\name{cluster_on_missing_prop}
\alias{cluster_on_missing_prop}
\title{Cluster Features Based on Missingness Proportions}
\usage{
cluster_on_missing_prop(
  prop_matrix,
  n_clusters = NULL,
  seed = NULL,
  min_cluster_size = NULL,
  cluster_selection_epsilon = 0.25,
  metric = "euclidean",
  scale_features = FALSE,
  handle_noise = "keep"
)
}
\arguments{
\item{prop_matrix}{Matrix or data frame where rows are samples, columns are features,
entries are missingness proportions \link{0,1}. Can be created with create_missingness_prop_matrix().}

\item{n_clusters}{Number of clusters for KMeans; if NULL, uses HDBSCAN (default: NULL)}

\item{seed}{Random seed for KMeans reproducibility (default: NULL)}

\item{min_cluster_size}{HDBSCAN minimum cluster size; if NULL, uses max(2, n_features/25) (default: NULL)}

\item{cluster_selection_epsilon}{HDBSCAN cluster selection threshold (default: 0.25)}

\item{metric}{Distance metric - "euclidean" or "cosine" (default: "euclidean")}

\item{scale_features}{Whether to standardize feature vectors before clustering (default: FALSE)}

\item{handle_noise}{How to handle HDBSCAN noise points: "keep" (default), "separate", or "merge"}
}
\value{
List containing:
\itemize{
\item labels: Integer vector of cluster assignments for each feature (includes -1 for noise if HDBSCAN)
\item labels_positive: Integer vector with noise points converted to positive cluster IDs
\item silhouette_score: Silhouette score for clustering quality (NULL if not calculable)
\item feature_names: Names of features corresponding to cluster labels
\item n_noise: Number of features assigned to noise (HDBSCAN only)
}
}
\description{
Groups features with similar patterns of missingness across samples using either
K-means clustering (when n_clusters is specified) or HDBSCAN (when n_clusters is NULL).
This helps identify features that tend to be missing together systematically.
}
\details{
Note: HDBSCAN may assign some features to "noise" (cluster -1). These features are
kept and will be treated as individual clusters by CISS-VAE.
}
\examples{
# Create sample data with systematic missingness patterns
set.seed(123)
data <- data.frame(
  sample_id = 1:100,
  # Group 1: High missingness in first 50 samples
  feat1 = c(rep(NA, 50), rnorm(50)),
  feat2 = c(rep(NA, 45), rnorm(55)),
  feat3 = c(rep(NA, 48), rnorm(52)),
  # Group 2: High missingness in last 50 samples  
  feat4 = c(rnorm(50), rep(NA, 50)),
  feat5 = c(rnorm(52), rep(NA, 48)),
  # Group 3: Low missingness throughout
  feat6 = c(rnorm(90), rep(NA, 10)),
  feat7 = c(rnorm(88), rep(NA, 12))
)

# Create proportion matrix
prop_mat <- create_missingness_prop_matrix(data, index_col = "sample_id")

# Cluster features by missingness pattern
clusters <- cluster_on_missing_prop(prop_mat, n_clusters = 3)
print(clusters$labels)
print(clusters$silhouette_score)
}
